#!/bin/bash
###################################################################
# Copyright (c) 2014-2020, Marc De Graef Research Group/Carnegie Mellon University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are 
# permitted provided that the following conditions are met:
#
#     - Redistributions of source code must retain the above copyright notice, this list 
#        of conditions and the following disclaimer.
#     - Redistributions in binary form must reproduce the above copyright notice, this 
#        list of conditions and the following disclaimer in the documentation and/or 
#        other materials provided with the distribution.
#     - Neither the names of Marc De Graef, Carnegie Mellon University nor the names 
#        of its contributors may be used to endorse or promote products derived from 
#        this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# ###################################################################
#--------------------------------------------------------------------------
# EMsoftOO:run_pyEMsoftOO.sh
#--------------------------------------------------------------------------
#
# PROGRAM: run_pyEMsoftOO.sh
#
#> @author Chayoi Zhu, Marc De Graef
# 
#> @note: 
#
#> @date 08/30/19 MDG 1.0 original 
#> @date 09/03/19 MDG 1.1 merged HDF routine into this one
#> @date 09/11/19 MDG 1.2 added automatic CMake substitution of all folder paths 
#> @date 10/11/19 MDG 1.3 general cleanup and completion of CMake substitutions
#--------------------------------------------------------------------------

#---------------------------
# THIS FILE IS AUTOMATICALLY GENERATED DURING CMAKE TIME. THE ORIGINAL FILE
# IS LOCATED AT @EMsoftOO_SOURCE_DIR@/pyEMsoftOO/run_pyEMsoftOO.sh.in
# YOU NEED TO MAKE CHANGES TO THAT FILE. ANY CHANGES MADE TO THIS FILE WILL
# BE OVER WRITTEN THE NEXT TIME CMAKE IS EXECUTED.
#---------------------------

#=======================
#=======================
# this script assumes a properly functioning python environment (preferably anaconda 3)
# along with a correctly installed f90wrap package (https://github.com/jameskermode/f90wrap)
#=======================
#=======================

# declare the arrays of source files that need to be included in this python wrapper build;
# these files are listed in the order that they are make'd in a regular single thread EMsoftOO build.
declare -a f90_source_files=("mod_io") 

#declare -a f90_HDF_source_files=("commonmod.f90"
#                                 "HDFsupport.f90"
#                                 "utilities.f90"
#                                 "EBSDmod.f90")
#
declare -a f90_generated_source_files=("stringconstants.f90"
                                       "local.f90")

#=======================
# the following folders are set at configuration time via CMake variables
EMsoftOO_BUILDfolder=@EMsoftOO_BUILD_DIR@
EMsoftOO_Binfolder=@EMsoftOO_BUILD_DIR@/Bin
pyEMsoftOO_BUILDfolder=@EMsoftOO_BUILD_DIR@/pyEMsoftOO
EMsoftOO_folder=@EMsoftOO_SOURCE_DIR@ 
pyEMsoftOO_folder=@EMsoftOO_SOURCE_DIR@/Source/pyEMsoftOO
#CondaLib=@USERHOMEDIR@/anaconda3/lib
EMsoftOO_SDK=@EMsoftOO_SDK@

#=======================
# derived folders
EMsoftOOLib=${EMsoftOO_folder}/Source/EMsoftOOLib
EMsoftOOHDFLib=${EMsoftOO_folder}/Source/EMsoftOOHDFLib
EMsoftOOBuildLib=${EMsoftOO_BUILDfolder}/EMsoftOO/EMsoftOOLib
#EMsoftOOBuildHDFLib=${EMsoftOO_BUILDfolder}/EMsoftOO/EMsoftOOHDFLib

#=======================
# set the working directory to pyEMsoftOO_BUILDfolder (create it if necessary)
currentdir=`pwd`
[ ! -d ${pyEMsoftOO_BUILDfolder} ] && mkdir -p ${pyEMsoftOO_BUILDfolder}
[ ! -d ${pyEMsoftOO_BUILDfolder}/logs ] && mkdir -p ${pyEMsoftOO_BUILDfolder}/logs
[ ! -d ${pyEMsoftOO_BUILDfolder}/f90 ] && mkdir -p ${pyEMsoftOO_BUILDfolder}/f90
cd ${pyEMsoftOO_BUILDfolder}

#=======================
# copy all relevant source files to the present folder 
echo " run_pyEMsoftOO.sh: copying source files into place"
for file in "${f90_source_files[@]}"
do
	cp ${EMsoftOOLib}/${file} .
done
#for file in "${f90_HDF_source_files[@]}"
#do
#    cp ${EMsoftOOHDFLib}/${file} .
#done
for file in "${f90_generated_source_files[@]}"
do
	cp ${EMsoftOOBuildLib}/${file} .
done 

#=======================
# execute the f90wrap program using all the files just copied, with some exceptions for certain routines
echo " run_pyEMsoftOO.sh: executing f90wrap"
f90wrap -k ${pyEMsoftOO_folder}/kind_map -m pyEMsoftOO ${f90_generated_source_files[*]} ${f90_source_files[*]} \
--skip hipassfilterc hipassfilter 1>build.log 2>build_error.log
#=======================
# call f2py-f90wrap to build the wrapper library
echo " run_pyEMsoftOO.sh: executing f2py-f90wrap ... this can take a very long time (several hours) ..."
f2py-f90wrap -c -m _pyEMsoftOO f90wrap_*.f90 -I${EMsoftOOBuildLib}  \
-I@HDF5_INSTALL@/include/static \
-I@CLFortran_INSTALL@/include \
-I@JSONFORTRAN_INSTALL@/include \
-I@FFTW3_INSTALL@/include \
-L${EMsoftOO_Binfolder} \
-L@CLFortran_INSTALL@/lib \
-L@JSONFORTRAN_INSTALL@/lib \
-L@FFTW3_INSTALL@/lib \
-L@HDF5_INSTALL@/lib \
--link-lapack_opt \
-lgomp -lgfortran \
-lEMsoftOOLib -ljsonfortran -lhdf5 -lhdf5_fortran \
-lclfortran -lfftw3 -lhdf5_cpp -lhdf5_f90cstub -lhdf5_hl_cpp \
-lhdf5_tools -lhdf5_hl -lhdf5_hl_fortran -lhdf5_hl_f90cstub  1>>build.log 2>>build_error.log

#=======================
# clean up all the .f90 files that we no longer need
echo " run_pyEMsoftOO.sh: cleaning up"
mv f90wrap_*.f90 f90
for file in "${f90_generated_source_files[@]}"
do
    rm ${file}
done
#for file in "${f90_HDF_source_files[@]}"
#do
#    rm ${file}
#done
for file in "${f90_source_files[@]}"
do
    rm ${file}
done
mv *.log logs

# on Mac OS X, fix the rpath variable in the .so file
myos=`uname` 
if [ "$myos" = "Darwin" ]; then
    install_name_tool -change @rpath/libEMsoftOOLib.dylib ${EMsoftOO_Binfolder}/libEMsoftOOLib.dylib _pyEMsoftOO.*.so
    #install_name_tool -change @rpath/libEMsoftOOHDFLib.dylib ${EMsoftOO_Binfolder}/libEMsoftOOHDFLib.dylib _pyEMsoftOO.*.so
fi

# and return to the starting folder
echo " run_pyEMsoftOO.sh: pyEMsoftOO wrapper .so file build completed"

# copy the examples and unittests folders into the python wrapper folder
echo " copying examples and unittests folders into build folder"
cp -R ${pyEMsoftOO_folder}/examples .
cp -R ${pyEMsoftOO_folder}/unittests .
cp -R ${pyEMsoftOO_folder}/pyEMsoftOOTools.py .

echo " Done."
cd ${currentdir}

# that's it
